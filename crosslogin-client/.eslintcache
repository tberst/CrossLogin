[{"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\index.tsx":"1","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\reportWebVitals.ts":"2","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\App.tsx":"3","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\SignalR\\HubClient.tsx":"4","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\Qr\\QrCode.tsx":"5","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\UserContent\\UserContent.tsx":"6","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\Auth\\Auth.tsx":"7","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Services\\EventBus.ts":"8","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Services\\MsalClient.ts":"9","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Config\\AuthConfig.ts":"10","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Services\\GraphService.ts":"11","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\UserContent\\Tasks\\UserCard.tsx":"12","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\UserContent\\Tasks\\TaskList.tsx":"13","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\UserContent\\Tasks\\TaskCard.tsx":"14","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\Qr\\LogOutCode.tsx":"15","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\Auth\\LogOut.tsx":"16"},{"size":500,"mtime":1608828895856,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1290,"mtime":1609022492221,"results":"20","hashOfConfig":"18"},{"size":4391,"mtime":1608912630940,"results":"21","hashOfConfig":"18"},{"size":1055,"mtime":1609022688297,"results":"22","hashOfConfig":"18"},{"size":805,"mtime":1609022571302,"results":"23","hashOfConfig":"18"},{"size":1578,"mtime":1609022667210,"results":"24","hashOfConfig":"18"},{"size":399,"mtime":1608586819815,"results":"25","hashOfConfig":"18"},{"size":3356,"mtime":1608673127978,"results":"26","hashOfConfig":"18"},{"size":261,"mtime":1608591709423,"results":"27","hashOfConfig":"18"},{"size":1164,"mtime":1608917121294,"results":"28","hashOfConfig":"18"},{"size":2637,"mtime":1609019851911,"results":"29","hashOfConfig":"18"},{"size":1278,"mtime":1609021352900,"results":"30","hashOfConfig":"18"},{"size":1206,"mtime":1609021274881,"results":"31","hashOfConfig":"18"},{"size":1015,"mtime":1609022388567,"results":"32","hashOfConfig":"18"},{"size":1065,"mtime":1609022664353,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ybeyb7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\index.tsx",[],["68","69"],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\reportWebVitals.ts",[],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\App.tsx",[],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\SignalR\\HubClient.tsx",["70"],"import React, { useState, useEffect } from 'react';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport eventBus from '../../Services/EventBus';\r\nimport consola from 'consola';\r\n\r\nconst HubClient = (props: any) => {\r\n\r\n    const [connection, setConnection] = useState<HubConnection>();\r\n    const [isAuthenticated, setisAuthenticated] = useState<Boolean>(false);\r\n    const [connectionId, setConnectionId] = useState<String>(\"\");\r\n\r\n    /**\r\n     * Send cross login event to SignalR\r\n     * @param event \r\n     * @param payload \r\n     */\r\n    const sendCrossLogin = async (event: string,connectionId : string,  payload: string) => {\r\n        consola.info('sendCrossLogin');\r\n        const crossLoginMessage = {\r\n            event: event,\r\n            targetId : connectionId,\r\n            payload: payload\r\n        };\r\n\r\n        if (connection) {\r\n            try {\r\n                await connection.send('sendCrossLogin', crossLoginMessage);\r\n            }\r\n            catch (e) {\r\n                consola.error(e);\r\n            }\r\n        }\r\n        else {\r\n            consola.error('No connection to server yet.');\r\n        }\r\n    }\r\n\r\n    // setup signalR connection\r\n    useEffect(() => {\r\n        const newConnection = new HubConnectionBuilder()\r\n            .withUrl('https://localhost:5001/hubs/chat')\r\n            .withAutomaticReconnect()\r\n            .build();\r\n\r\n        setConnection(newConnection);\r\n    }, []);\r\n\r\n    //when the signalR connection is up, setup the wiring\r\n    useEffect(() => {\r\n        if (connection != null) {\r\n            connection.start()\r\n                .then(result => {\r\n                    consola.success('Connected!');\r\n                    setConnectionId(connection.connectionId == null ? \"\" : connection.connectionId);\r\n                    // 1 - plug the ReceiveCrosslogin logic when a message is received from the signalR hub\r\n                    connection.on('ReceiveCrossLogin', (message: any) => {\r\n                        consola.info('ReceiveCrossLogin');\r\n                        consola.info(message);\r\n                        if (message.event === \"login\")\r\n                        {\r\n                            const sessionData = JSON.parse(message.payload);\r\n                            sessionData.forEach((element :any)=> {\r\n                                sessionStorage.setItem(element.key, element.value);\r\n                            });\r\n                            setisAuthenticated(true);\r\n                        }\r\n                        else\r\n                        {\r\n                            setisAuthenticated(false);\r\n                            sessionStorage.clear();\r\n                        }\r\n                    });\r\n\r\n                     // 2 - plug the eventbus receiver to receive authentication event from the Auth component.\r\n                    eventBus.on(\"AuthenticatedEvent\",\r\n                        (data:any) => {\r\n                            const message = Object.keys(sessionStorage).map((key) => { return { key: key, value: sessionStorage.getItem(key) } });\r\n                            const payload = JSON.stringify(message);\r\n                            sendCrossLogin(\"login\", data.connectionId, payload);\r\n                        }\r\n                    );\r\n                      // 2 - plug the eventbus receiver to receive authentication event from the Auth component.\r\n                      eventBus.on(\"LogoutEvent\",\r\n                      (data : any) => {\r\n                          sendCrossLogin(\"logout\",data, \"\");\r\n                      }\r\n                  );\r\n                })\r\n                .catch((e: any) => consola.error('Connection failed: ', e));\r\n        }\r\n    }, [connection,connectionId]);\r\n\r\n\r\n    consola.info(\"hubconnectionId : \" + connection?.connectionId);\r\n    //pass the isAuthenticated props to all the children\r\n    const childrenWithProps = React.Children.map(props.children, child => {\r\n        // checking isValidElement is the safe way and avoids a typescript error too\r\n        if (React.isValidElement(child)) {\r\n            return React.cloneElement(child, { isAuthenticated: isAuthenticated, connectionId : connectionId } as any);\r\n        }\r\n        return child;\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>{childrenWithProps}\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default HubClient;","C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\Qr\\QrCode.tsx",[],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\UserContent\\UserContent.tsx",[],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\Auth\\Auth.tsx",[],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Services\\EventBus.ts",[],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Services\\MsalClient.ts",[],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Config\\AuthConfig.ts",[],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Services\\GraphService.ts",[],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\UserContent\\Tasks\\UserCard.tsx",[],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\UserContent\\Tasks\\TaskList.tsx",[],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\UserContent\\Tasks\\TaskCard.tsx",["71","72"],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\Qr\\LogOutCode.tsx",["73"],"C:\\workspace-github\\crosslogin-github\\CrossLogin\\crosslogin-client\\src\\Components\\Auth\\LogOut.tsx",["74","75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":91,"column":8,"nodeType":"82","endLine":91,"endColumn":33,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":11,"column":35,"nodeType":"86","messageId":"87","endLine":11,"endColumn":46},{"ruleId":"84","severity":1,"message":"88","line":11,"column":48,"nodeType":"86","messageId":"87","endLine":11,"endColumn":50},{"ruleId":"84","severity":1,"message":"89","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":15},{"ruleId":"84","severity":1,"message":"89","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":15},{"ruleId":"84","severity":1,"message":"90","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":25},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sendCrossLogin'. Either include it or remove the dependency array.","ArrayExpression",["93"],"@typescript-eslint/no-unused-vars","'dueDateTime' is assigned a value but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'consola' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [connection, connectionId, sendCrossLogin]",{"range":"96","text":"97"},[3732,3757],"[connection, connectionId, sendCrossLogin]"]